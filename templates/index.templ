package templates

import (
	"github.com/ethereum/go-ethereum/core/types"
	"fmt"
	"strconv"
)

// Helper function to shorten hash
func shortenHash(hash string) string {
	if len(hash) <= 12 {
		return hash
	}
	return hash[:10] + "..." + hash[len(hash)-4:]
}

templ Index(blocks []*types.Block) {
	@Layout("RPCPlorer - Home") {
		<div class="container mx-auto px-4 py-8">
			<!-- Hero Section -->
			<div class="bg-white rounded-lg shadow-md p-6 mb-8">
				<div class="mb-6">
					<h2 class="text-2xl font-semibold text-gray-800 mb-2">Welcome to RPCPlorer</h2>
					<p class="text-gray-600">Explore blockchain data with ease.</p>
				</div>
				
				<div class="md:hidden mb-6">
					<div class="relative">
						<input type="text" placeholder="Search by Address / Txn Hash / Block / Token" 
							class="w-full py-3 px-4 pr-10 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" />
						<button class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400">
							<i class="fas fa-search"></i>
						</button>
					</div>
				</div>
		
			</div>
			
			<!-- Latest Transactions and Blocks Section -->
			<div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
				<!-- Latest Transactions -->
				<div class="bg-white rounded-lg shadow-md">
					<div class="border-b px-6 py-4 flex justify-between items-center">
						<h3 class="text-lg font-medium text-gray-800">Latest Transactions</h3>
						<div class="flex items-center">
							<div class="text-sm text-green-600 mr-3">
								<span class="htmx-indicator" id="txn-poll-indicator">
									<i class="fas fa-circle-notch fa-spin mr-1"></i> Auto-refreshing
								</span>
							</div>
							<button
								class="text-blue-500 hover:text-blue-700 text-sm flex items-center"
								hx-get="/api/transactions"
								hx-target="#latest-transactions"
								hx-trigger="click, every 2s"
								hx-indicator="#txn-spinner">
								<i class="fas fa-sync-alt mr-1"></i> Refresh
								<span id="txn-spinner" class="htmx-indicator ml-1">
									<i class="fas fa-circle-notch fa-spin"></i>
								</span>
							</button>
						</div>
					</div>
					<div id="latest-transactions" class="divide-y fade-me-in" hx-get="/api/transactions" hx-trigger="load, every 2s" hx-indicator="#txn-poll-indicator">
						@TransactionsList(blocks)
					</div>
				</div>
				
				<!-- Latest Blocks -->
				<div class="bg-white rounded-lg shadow-md">
					<div class="border-b px-6 py-4 flex justify-between items-center">
						<h3 class="text-lg font-medium text-gray-800">Latest Blocks</h3>
						<div class="flex items-center">
							<div class="text-sm text-green-600 mr-3">
								<span class="htmx-indicator" id="block-poll-indicator">
									<i class="fas fa-circle-notch fa-spin mr-1"></i> Auto-refreshing
								</span>
							</div>
							<button
								class="text-blue-500 hover:text-blue-700 text-sm flex items-center"
								hx-get="/api/blocks" 
								hx-target="#latest-blocks"
								hx-trigger="click, every 2s"
								hx-indicator="#block-spinner">
								<i class="fas fa-sync-alt mr-1"></i> Refresh
								<span id="block-spinner" class="htmx-indicator ml-1">
									<i class="fas fa-circle-notch fa-spin"></i>
								</span>
							</button>
						</div>
					</div>
					<div id="latest-blocks" class="divide-y fade-me-in" hx-get="/api/blocks" hx-trigger="load, every 2s" hx-indicator="#block-poll-indicator">
						@BlocksList(blocks)
					</div>
				</div>
			</div>
		</div>
	}
}

templ TransactionsList(blocks []*types.Block) {
	if len(blocks) > 0 && blocks[0] != nil {
		for i, tx := range blocks[0].Transactions() {
			if i < 5 {
				<div class="px-6 py-3 hover:bg-gray-50 fade-me-in">
					<div class="flex items-center">
						<div class="bg-blue-100 rounded-full p-2 mr-3">
							<i class="fas fa-exchange-alt text-blue-500"></i>
						</div>
						<div class="flex-1">
							<p class="text-blue-500 font-medium truncate">
								<a href={ templ.SafeURL("/tx/" + tx.Hash().Hex()) }>{ shortenHash(tx.Hash().Hex()) }</a>
							</p>
							<p class="text-sm text-gray-500">
								if tx.To() != nil {
									To: { shortenHash(tx.To().Hex()) }
								} else {
									Contract Creation
								}
							</p>
						</div>
						<div class="text-right">
							<p class="text-gray-800">{ tx.Value().String() }</p>
							<p class="text-sm text-gray-500">Gas: { fmt.Sprintf("%d", tx.Gas()) }</p>
						</div>
					</div>
				</div>
			}
		}
		if len(blocks[0].Transactions()) == 0 {
			<div class="px-6 py-4 text-center text-gray-500">
				No transactions in this block
			</div>
		}
	} else {
		<div class="px-6 py-4 text-center text-gray-500">
			No blocks available
		</div>
	}
	<div class="border-t px-6 py-3 text-center">
		<a href="#" class="text-blue-500 hover:text-blue-700">View all transactions</a>
	</div>
}

templ BlocksList(blocks []*types.Block) {
	if len(blocks) > 0 {
		for i, block := range blocks {
			if i < 5 && block != nil {
				<div class="px-6 py-3 hover:bg-gray-50 fade-me-in">
					<div class="flex items-center">
						<div class="bg-red-100 rounded-full p-2 mr-3">
							<i class="fas fa-cube text-red-500"></i>
						</div>
						<div class="flex-1">
							<p class="text-blue-500 font-medium">
								<a href={ templ.SafeURL("/block/" + strconv.FormatUint(block.NumberU64(), 10)) }>
									{ strconv.FormatUint(block.NumberU64(), 10) }
								</a>
							</p>
							<p class="text-sm text-gray-500">
								Hash: <a href={ templ.SafeURL("/block/" + block.Hash().Hex()) }>{ shortenHash(block.Hash().Hex()) }</a>
							</p>
						</div>
						<div class="text-right">
							<p class="text-gray-800">Miner: <span class="text-blue-500">{ shortenHash(block.Coinbase().Hex()) }</span></p>
							<p class="text-sm text-gray-500">{ strconv.Itoa(len(block.Transactions())) } txns</p>
						</div>
					</div>
				</div>
			}
		}
		if len(blocks) == 0 {
			<div class="px-6 py-4 text-center text-gray-500">
				No blocks available
			</div>
		}
	} else {
		<div class="px-6 py-4 text-center text-gray-500">
			No blocks available
		</div>
	}
	<div class="border-t px-6 py-3 text-center">
		<a href="/blocks" class="text-blue-500 hover:text-blue-700">View all blocks</a>
	</div>
} 